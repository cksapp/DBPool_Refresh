{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Datto.DBPool.Refresh","text":"<p>This PowerShell module is used to <code>Refresh</code> all child containers in Datto (Kaseya) DBPool.</p> <p>This can be combined with Scheduled Tasks in Windows or a similar Cron job to automate the refresh script on a set interval. The recommendation is ~30 - 60 minutes prior to the start of your shift.</p>"},{"location":"#installation","title":"Installation","text":""},{"location":"#install-script","title":"Install Script","text":"<p>Use the following script to easily install and handle all dependancies.</p> <pre><code>$scriptFile = 'https://raw.githubusercontent.com/cksapp/Datto-DBPool_Refresh/refs/heads/main/src/Initialize-RefreshDBPool.ps1'; $fileName = [System.IO.Path]::GetFileName($scriptFile); $tempFile = [System.IO.Path]::Combine([System.IO.Path]::GetTempPath(), $fileName); if ($PSEdition -eq 'Desktop' -or $IsWindows) { Set-ExecutionPolicy Bypass -Scope Process -Force }; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; (New-Object System.Net.WebClient).DownloadFile($scriptFile, $tempFile); &amp; $tempFile\n</code></pre> <p>The install script is user interactive with a few prompts to set up the initial install and variables needed to automate the container refresh.</p> <ol> <li>Copy the full script</li> <li>Open PowerShell (will work with both Windows PowerShell, and PowerShell)</li> <li>Paste the script content and enter (sometimes it seems this may hang, in which case pressing 'Enter' or 'Spacebar' will allow continued run)</li> </ol>"},{"location":"#install-from-powershell-gallery","title":"Install from PowerShell Gallery","text":"<p>If you prefer to perform step-by-step install from Powershell Gallery using the following command.</p> <pre><code>Install-Module -Name Datto.DBPool.Refresh -AllowPrerelease\n</code></pre>"},{"location":"#overview","title":"Overview","text":"<p>This section will detail parts of the PowerShell script and give a high-level overview of the logic.</p> <p>If you would like to make any suggestions, Pull Requests are always welcome. \ud83d\ude04</p>"},{"location":"#api-key","title":"API Key","text":"<p>You will need to get your personal API key, which will be needed by the module to refresh your containers. First login to the web-portal https://dbpool.datto.net</p> <ol> <li>Select your User Profile at the top-right, select My profile from the drop-down    </li> <li>Under Profile \u2192 Metadata \u2192 API key, listed is your personal API key    Make a record of this in a safe-place.    </li> <li>Use <code>Set-RefreshDBPoolApiKey</code> to add the API key to module secret store</li> </ol>"},{"location":"#environment-override","title":"Environment Override","text":"<p>The script is configured to check for an environment override file in the User <code>$HOME</code> directory or where specified by <code>Export-RefreshDBPoolModuleSetting</code>.</p> <p>Default location in Windows is \"<code>$HOME\\RefreshDBPool</code>\"</p>"},{"location":"#automating","title":"Automating","text":"<p>The module handles automation by creating schedule task in Windows to run refresh script daily.</p>"},{"location":"#examples","title":"Examples","text":""},{"location":"Copy-DBPoolParentContainer/","title":"Copy-DBPoolParentContainer","text":""},{"location":"Copy-DBPoolParentContainer/#synopsis","title":"SYNOPSIS","text":"<p>Clones the specified DBPool parent container(s) using the DBPool API.</p>"},{"location":"Copy-DBPoolParentContainer/#syntax","title":"SYNTAX","text":""},{"location":"Copy-DBPoolParentContainer/#byid-default","title":"byId (Default)","text":"<pre><code>Copy-DBPoolParentContainer -Id &lt;Int32[]&gt; [-ContainerName_Append &lt;String&gt;] [-Duplicate] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Copy-DBPoolParentContainer/#bydefaultdatabase","title":"byDefaultDatabase","text":"<pre><code>Copy-DBPoolParentContainer -DefaultDatabase &lt;String[]&gt; [-ContainerName_Append &lt;String&gt;] [-Duplicate]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Copy-DBPoolParentContainer/#description","title":"DESCRIPTION","text":"<p>This function clones the specified DBPool parent container(s) using the DBPool API. The cloned container(s) will have the same parent container as the original container(s) and will be appended with the specified string.</p>"},{"location":"Copy-DBPoolParentContainer/#examples","title":"EXAMPLES","text":""},{"location":"Copy-DBPoolParentContainer/#example-1","title":"EXAMPLE 1","text":"<pre><code>Copy-DBPoolParentContainer -Id 1234\n</code></pre> <p>Clones the DBPool parent container with the ID 1234.</p>"},{"location":"Copy-DBPoolParentContainer/#example-2","title":"EXAMPLE 2","text":"<pre><code>Copy-DBPoolParentContainer -DefaultDatabase 'exampleParentA'\n</code></pre> <p>Clones the DBPool parent container with the DefaultDatabase 'exampleParentA'.</p>"},{"location":"Copy-DBPoolParentContainer/#example-3","title":"EXAMPLE 3","text":"<pre><code>Copy-DBPoolParentContainer -Id 1234, 5678 -ContainerName_Append 'copy'\n</code></pre> <p>Clones the DBPool parent containers with the IDs 1234 and 5678 and appends 'copy' to the cloned container name.</p>"},{"location":"Copy-DBPoolParentContainer/#example-4","title":"EXAMPLE 4","text":"<pre><code>Copy-DBPoolParentContainer -DefaultDatabase 'exampleParentA', 'exampleParentB' -Duplicate\n</code></pre> <p>Clones the DBPool parent containers with the DefaultDatabase 'exampleParentA' and 'exampleParentB' even if similar containers already exist.</p>"},{"location":"Copy-DBPoolParentContainer/#parameters","title":"PARAMETERS","text":""},{"location":"Copy-DBPoolParentContainer/#-id","title":"-Id","text":"<p>The ID(s) of the parent container(s) to clone.</p> <pre><code>Type: Int32[]\nParameter Sets: byId\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: True (ByPropertyName, ByValue)\nAccept wildcard characters: False\n</code></pre>"},{"location":"Copy-DBPoolParentContainer/#-defaultdatabase","title":"-DefaultDatabase","text":"<p>The DefaultDatabase(s) of the parent container(s) to clone.</p> <pre><code>Type: String[]\nParameter Sets: byDefaultDatabase\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Copy-DBPoolParentContainer/#-containername_append","title":"-ContainerName_Append","text":"<p>The string to append to the cloned container name. The default value is 'clone'.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: Clone\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Copy-DBPoolParentContainer/#-duplicate","title":"-Duplicate","text":"<p>If specified, the function will clone the parent container(s) even if a similar container already exists.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Copy-DBPoolParentContainer/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"Copy-DBPoolParentContainer/#inputs","title":"INPUTS","text":""},{"location":"Copy-DBPoolParentContainer/#int-array-of-ids-of-the-parent-containers-to-clone","title":"[int] - Array of ID(s) of the parent container(s) to clone","text":""},{"location":"Copy-DBPoolParentContainer/#string-array-of-defaultdatabases-of-the-parent-containers-to-clone","title":"[string] - Array of DefaultDatabase(s) of the parent container(s) to clone","text":""},{"location":"Copy-DBPoolParentContainer/#outputs","title":"OUTPUTS","text":""},{"location":"Copy-DBPoolParentContainer/#pscustomobject-object-containing-the-cloned-containers-information","title":"[PSCustomObject] - Object containing the cloned container(s) information","text":""},{"location":"Copy-DBPoolParentContainer/#notes","title":"NOTES","text":"<p>N/A</p>"},{"location":"Copy-DBPoolParentContainer/#related-links","title":"RELATED LINKS","text":"<p>https://datto-dbpool-refresh.kentsapp.com/Copy-DBPoolParentContainer/</p>"},{"location":"Sync-DBPoolContainer/","title":"Sync-DBPoolContainer","text":""},{"location":"Sync-DBPoolContainer/#synopsis","title":"SYNOPSIS","text":"<p>Refreshes the specified DBPool container(s) using the DBPool API. By default, this function will refresh all containers if no IDs are provided.</p>"},{"location":"Sync-DBPoolContainer/#syntax","title":"SYNTAX","text":"<pre><code>Sync-DBPoolContainer [[-Id] &lt;Int32[]&gt;] [-TimeoutSeconds &lt;Int32&gt;] [-Force] [-WhatIf] [-Confirm]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Sync-DBPoolContainer/#description","title":"DESCRIPTION","text":"<p>This function refreshes the specified DBPool container(s) using the DBPool API. By default, this function will refresh all containers if no IDs are provided.</p>"},{"location":"Sync-DBPoolContainer/#examples","title":"EXAMPLES","text":""},{"location":"Sync-DBPoolContainer/#example-1","title":"EXAMPLE 1","text":"<pre><code>Sync-DBPoolContainer\n</code></pre> <p>Refreshes all DBPool containers.</p>"},{"location":"Sync-DBPoolContainer/#example-2","title":"EXAMPLE 2","text":"<pre><code>Sync-DBPoolContainer -Id 1234\n</code></pre> <p>Refreshes the DBPool container with the ID 1234.</p>"},{"location":"Sync-DBPoolContainer/#example-3","title":"EXAMPLE 3","text":"<pre><code>Sync-DBPoolContainer -Id 1234, 5678\n</code></pre> <p>Refreshes the DBPool containers with the IDs 1234 and 5678.</p>"},{"location":"Sync-DBPoolContainer/#example-4","title":"EXAMPLE 4","text":"<pre><code>Sync-DBPoolContainer -Id $(Get-DBPoolContainer -DefaultDatabase \"Database_Name\").Id\n</code></pre> <p>Refreshes all DBPool containers matching the specified database name.</p>"},{"location":"Sync-DBPoolContainer/#example-5","title":"EXAMPLE 5","text":"<pre><code>Sync-DBPoolContainer -Id $(Get-DBPoolContainer -NotLike -Name \"*Container_Name*\").Id -Force\n</code></pre> <p>Refreshes all DBPool containers not matching the specified container name.</p>"},{"location":"Sync-DBPoolContainer/#parameters","title":"PARAMETERS","text":""},{"location":"Sync-DBPoolContainer/#-id","title":"-Id","text":"<p>The ID(s) of the container(s) to refresh. If no IDs are provided, all containers will be refreshed.</p> <pre><code>Type: Int32[]\nParameter Sets: (All)\nAliases: ContainerId\n\nRequired: False\nPosition: 1\nDefault value: $RefreshDBPool_Container_Ids\nAccept pipeline input: True (ByPropertyName, ByValue)\nAccept wildcard characters: False\n</code></pre>"},{"location":"Sync-DBPoolContainer/#-timeoutseconds","title":"-TimeoutSeconds","text":"<p>The maximum time in seconds to wait for the container(s) to refresh. The default value is 3600 seconds (1 hour).</p> <pre><code>Type: Int32\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: $RefreshDBPool_TimeoutSeconds\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Sync-DBPoolContainer/#-force","title":"-Force","text":"<p>If specified, the function will not prompt for confirmation before refreshing the container(s).</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Sync-DBPoolContainer/#-whatif","title":"-WhatIf","text":"<p>Shows what would happen if the cmdlet runs. The cmdlet is not run.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: wi\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Sync-DBPoolContainer/#-confirm","title":"-Confirm","text":"<p>Prompts you for confirmation before running the cmdlet.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: cf\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Sync-DBPoolContainer/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"Sync-DBPoolContainer/#inputs","title":"INPUTS","text":""},{"location":"Sync-DBPoolContainer/#int-array-of-ids-of-the-containers-to-perform-the-refresh-action-on","title":"[int] - Array of ID(s) of the container(s) to perform the refresh action on","text":""},{"location":"Sync-DBPoolContainer/#outputs","title":"OUTPUTS","text":""},{"location":"Sync-DBPoolContainer/#void-no-output-is-returned","title":"[void] - No output is returned","text":""},{"location":"Sync-DBPoolContainer/#notes","title":"NOTES","text":"<p>N/A</p>"},{"location":"Sync-DBPoolContainer/#related-links","title":"RELATED LINKS","text":"<p>https://datto-dbpool-refresh.kentsapp.com/Sync-DBPoolContainer/</p>"},{"location":"Internal/Set-DBPoolSecurityProtocol/","title":"Set-DBPoolSecurityProtocol","text":""},{"location":"Internal/Set-DBPoolSecurityProtocol/#synopsis","title":"SYNOPSIS","text":"<p>The Set-DBPoolSecurityProtocol function is used to set the Security Protocol in the current context.</p>"},{"location":"Internal/Set-DBPoolSecurityProtocol/#syntax","title":"SYNTAX","text":"<pre><code>Set-DBPoolSecurityProtocol [[-Protocol] &lt;String&gt;] [-WhatIf] [-Confirm] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Internal/Set-DBPoolSecurityProtocol/#description","title":"DESCRIPTION","text":"<p>Sets the Security Protocol for a .NET application to use TLS 1.2 by default. This function is useful for ensuring secure communication in .NET applications.</p>"},{"location":"Internal/Set-DBPoolSecurityProtocol/#examples","title":"EXAMPLES","text":""},{"location":"Internal/Set-DBPoolSecurityProtocol/#example-1","title":"EXAMPLE 1","text":"<pre><code>Set-DBPoolSecurityProtocol -Protocol Tls12\n</code></pre> <p>Sets the Security Protocol to use TLS 1.2.</p>"},{"location":"Internal/Set-DBPoolSecurityProtocol/#parameters","title":"PARAMETERS","text":""},{"location":"Internal/Set-DBPoolSecurityProtocol/#-protocol","title":"-Protocol","text":"<p>The security protocol to use. Can be set to 'Ssl3', 'SystemDefault', 'Tls', 'Tls11', 'Tls12', and 'Tls13'.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 1\nDefault value: Tls12\nAccept pipeline input: True (ByPropertyName, ByValue)\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/Set-DBPoolSecurityProtocol/#-whatif","title":"-WhatIf","text":"<p>Shows what would happen if the cmdlet runs. The cmdlet is not run.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: wi\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/Set-DBPoolSecurityProtocol/#-confirm","title":"-Confirm","text":"<p>Prompts you for confirmation before running the cmdlet.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: cf\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/Set-DBPoolSecurityProtocol/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"Internal/Set-DBPoolSecurityProtocol/#inputs","title":"INPUTS","text":""},{"location":"Internal/Set-DBPoolSecurityProtocol/#string-the-security-protocol-to-use","title":"[string] - The security protocol to use","text":""},{"location":"Internal/Set-DBPoolSecurityProtocol/#outputs","title":"OUTPUTS","text":""},{"location":"Internal/Set-DBPoolSecurityProtocol/#na","title":"N/A","text":""},{"location":"Internal/Set-DBPoolSecurityProtocol/#notes","title":"NOTES","text":"<p>Make sure to run this function in the appropriate context, as it affects .NET-wide security settings.</p>"},{"location":"Internal/Set-DBPoolSecurityProtocol/#related-links","title":"RELATED LINKS","text":"<p>https://datto-dbpool-refresh.kentsapp.com/Internal/Set-DBPoolSecurityProtocol/</p>"},{"location":"Internal/apiKey/Add-DattoSecretStore/","title":"Add-DattoSecretStore","text":""},{"location":"Internal/apiKey/Add-DattoSecretStore/#synopsis","title":"SYNOPSIS","text":"<p>Adds a local secret store using the Microsoft.PowerShell.SecretStore module.</p>"},{"location":"Internal/apiKey/Add-DattoSecretStore/#syntax","title":"SYNTAX","text":"<pre><code>Add-DattoSecretStore [[-Name] &lt;String&gt;] [[-ModuleName] &lt;String&gt;] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Internal/apiKey/Add-DattoSecretStore/#description","title":"DESCRIPTION","text":"<p>This function adds a local secret store using the Microsoft.PowerShell.SecretStore module. Checks if the secret store is installed and install if not found. The function also sets the secret store configuration for the default vault.</p>"},{"location":"Internal/apiKey/Add-DattoSecretStore/#examples","title":"EXAMPLES","text":""},{"location":"Internal/apiKey/Add-DattoSecretStore/#example-1","title":"EXAMPLE 1","text":"<pre><code>Add-DattoSecretStore\n</code></pre> <p>Adds a local secret store named 'Datto_SecretStore' using the Microsoft.PowerShell.SecretStore module.</p>"},{"location":"Internal/apiKey/Add-DattoSecretStore/#example-2","title":"EXAMPLE 2","text":"<pre><code>Add-DattoSecretStore -Name 'Custom_SecretsVault' -ModuleName 'Custom.SecretStore'\n</code></pre> <p>Adds a local secret store named 'Custom_SecretsVault' using the 'Custom.SecretStore' module.</p>"},{"location":"Internal/apiKey/Add-DattoSecretStore/#parameters","title":"PARAMETERS","text":""},{"location":"Internal/apiKey/Add-DattoSecretStore/#-name","title":"-Name","text":"<p>The name of the secret store to add. Defaults to 'Datto_SecretStore'.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 1\nDefault value: Datto_SecretStore\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Add-DattoSecretStore/#-modulename","title":"-ModuleName","text":"<p>The name of the module to use for the secret store. Defaults to 'Microsoft.PowerShell.SecretStore'.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 2\nDefault value: Microsoft.PowerShell.SecretStore\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Add-DattoSecretStore/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"Internal/apiKey/Add-DattoSecretStore/#inputs","title":"INPUTS","text":""},{"location":"Internal/apiKey/Add-DattoSecretStore/#na","title":"N/A","text":""},{"location":"Internal/apiKey/Add-DattoSecretStore/#outputs","title":"OUTPUTS","text":""},{"location":"Internal/apiKey/Add-DattoSecretStore/#na_1","title":"N/A","text":""},{"location":"Internal/apiKey/Add-DattoSecretStore/#notes","title":"NOTES","text":"<p>N/A</p>"},{"location":"Internal/apiKey/Add-DattoSecretStore/#related-links","title":"RELATED LINKS","text":"<p>https://datto-dbpool-refresh.kentsapp.com/Internal/apiKey/Add-DattoSecretStore/</p>"},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/","title":"Get-RefreshDBPoolApiKey","text":""},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#synopsis","title":"SYNOPSIS","text":"<p>This function gets the DBPool API key from the default PowerShell SecretManagement vault and sets the global variable.</p>"},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#syntax","title":"SYNTAX","text":"<pre><code>Get-RefreshDBPoolApiKey [[-SecretName] &lt;String&gt;] [[-SecretStoreName] &lt;String&gt;] [-AsPlainText] [-Force]\n [-WhatIf] [-Confirm] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#description","title":"DESCRIPTION","text":"<p>This function gets the DBPool API key from the default PowerShell SecretManagement vault and sets the global variable. If the global variable is already set, confirm with the user before overwriting the value or set the value without confirmation using the -Force switch.</p>"},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#examples","title":"EXAMPLES","text":""},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#example-1","title":"EXAMPLE 1","text":"<pre><code>Get-RefreshDBPoolApiKey\n</code></pre> <p>Retrieves the DBPool API key from the default SecretManagement vault with the default name 'DBPool_ApiKey' as a secure string.</p>"},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#example-2","title":"EXAMPLE 2","text":"<pre><code>Get-RefreshDBPoolApiKey -AsPlainText\n</code></pre> <p>Retrieves the DBPool API key from the default SecretManagement vault with the default name 'DBPool_ApiKey' as a plaintext string.</p>"},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#example-3","title":"EXAMPLE 3","text":"<pre><code>Get-RefreshDBPoolApiKey -SecretName 'Different_SecretName' -SecretStoreName 'Custom_SecretsVault' -Force\n</code></pre> <p>Retrieves the DBPool API key and adds it to the 'Custom_SecretsVault' SecretManagement vault with the name 'Different_SecretName'. If the secret already exists, it will be overwritten.</p>"},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#parameters","title":"PARAMETERS","text":""},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#-secretname","title":"-SecretName","text":"<p>The name to use for the secret in the SecretManagement vault. Defaults to 'DBPool_ApiKey'.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 1\nDefault value: DBPool_ApiKey\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#-secretstorename","title":"-SecretStoreName","text":"<p>The name of the SecretManagement vault where the secret will be stored. Defaults to the value of the environment variable 'Datto_SecretStore'.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 2\nDefault value: Datto_SecretStore\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#-asplaintext","title":"-AsPlainText","text":"<p>If specified, the function will return the API key as a plaintext string.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#-force","title":"-Force","text":"<p>If specified, forces the function to overwrite the existing secret if it already exists in the vault.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#-whatif","title":"-WhatIf","text":"<p>Shows what would happen if the cmdlet runs. The cmdlet is not run.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: wi\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#-confirm","title":"-Confirm","text":"<p>Prompts you for confirmation before running the cmdlet.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: cf\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#inputs","title":"INPUTS","text":""},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#na","title":"N/A","text":""},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#outputs","title":"OUTPUTS","text":""},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#securestring-the-dbpool-api-key-as-a-secure-string","title":"[securestring] - The DBPool API key as a secure string","text":""},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#string-the-dbpool-api-key-as-a-plaintext-string","title":"[string] - The DBPool API key as a plaintext string","text":""},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#notes","title":"NOTES","text":"<p>This function is designed to work with the default SecretManagement vault. Ensure the vault is installed and configured before using this function.</p>"},{"location":"Internal/apiKey/Get-RefreshDBPoolApiKey/#related-links","title":"RELATED LINKS","text":"<p>https://datto-dbpool-refresh.kentsapp.com/Internal/apiKey/Get-RefreshDBPoolApiKey/</p>"},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/","title":"Remove-RefreshDBPoolApiKey","text":""},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#synopsis","title":"SYNOPSIS","text":"<p>This function removes the DBPool API key to the default PowerShell SecretManagement vault.</p>"},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#syntax","title":"SYNTAX","text":"<pre><code>Remove-RefreshDBPoolApiKey [[-SecretName] &lt;String&gt;] [[-SecretStoreName] &lt;String&gt;] [-Force] [-WhatIf] [-Confirm]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#description","title":"DESCRIPTION","text":"<p>This function removes the DBPool API key from the specified SecretManagement vault.</p>"},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#examples","title":"EXAMPLES","text":""},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#example-1","title":"EXAMPLE 1","text":"<pre><code>Remove-RefreshDBPoolApiKey\n</code></pre> <p>Removes the API key from the SecretManagement vault.</p>"},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#example-2","title":"EXAMPLE 2","text":"<pre><code>Remove-RefreshDBPoolApiKey -SecretName 'Different_SecretName' -SecretStoreName 'Custom_SecretsVault' -Force\n</code></pre> <p>Removes the API key from the 'Custom_SecretsVault' SecretManagement vault with the name 'Different_SecretName'.</p>"},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#parameters","title":"PARAMETERS","text":""},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#-secretname","title":"-SecretName","text":"<p>The name to use for the secret in the SecretManagement vault. Defaults to 'DBPool_ApiKey'.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 1\nDefault value: DBPool_ApiKey\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#-secretstorename","title":"-SecretStoreName","text":"<p>The name of the SecretManagement vault where the secret is stored. Defaults to the value of the environment variable 'Datto_SecretStore'.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 2\nDefault value: Datto_SecretStore\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#-force","title":"-Force","text":"<p>If specified, forces the function to remove the secret from the vault.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#-whatif","title":"-WhatIf","text":"<p>Shows what would happen if the cmdlet runs. The cmdlet is not run.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: wi\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#-confirm","title":"-Confirm","text":"<p>Prompts you for confirmation before running the cmdlet.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: cf\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#inputs","title":"INPUTS","text":""},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#na","title":"N/A","text":""},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#outputs","title":"OUTPUTS","text":""},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#na_1","title":"N/A","text":""},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#notes","title":"NOTES","text":"<p>N/A</p>"},{"location":"Internal/apiKey/Remove-RefreshDBPoolApiKey/#related-links","title":"RELATED LINKS","text":"<p>https://datto-dbpool-refresh.kentsapp.com/Internal/apiKey/Remove-RefreshDBPoolApiKey/</p>"},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/","title":"Set-RefreshDBPoolApiKey","text":""},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#synopsis","title":"SYNOPSIS","text":"<p>This function adds the DBPool API key to the default PowerShell SecretManagement vault.</p>"},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#syntax","title":"SYNTAX","text":"<pre><code>Set-RefreshDBPoolApiKey [-SecretName &lt;String&gt;] [-DBPool_ApiKey] &lt;SecureString&gt; [-SecretStoreName &lt;String&gt;]\n [-Force] [-WhatIf] [-Confirm] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#description","title":"DESCRIPTION","text":"<p>This function securely stores the DBPool API key in the specified SecretManagement vault. It can be used to add or update the API key for later use in scripts and automation tasks. If the secret already exists, the function can overwrite it if the -Force switch is used.</p>"},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#examples","title":"EXAMPLES","text":""},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#example-1","title":"EXAMPLE 1","text":"<pre><code>Set-RefreshDBPoolApiKey -DBPool_ApiKey $secureApiKey -Verbose\n</code></pre> <p>Adds the DBPool API key to the default SecretManagement vault with the name 'DBPool_ApiKey'.</p>"},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#example-2","title":"EXAMPLE 2","text":"<pre><code>Set-RefreshDBPoolApiKey -DBPool_ApiKey $secureApiKey -SecretName 'Custom_ApiKey' -SecretStoreName 'MySecretStore' -Force\n</code></pre> <p>Adds the DBPool API key to the 'MySecretStore' SecretManagement vault with the name 'Custom_ApiKey'. If the secret already exists, it will be overwritten.</p>"},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#parameters","title":"PARAMETERS","text":""},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#-secretname","title":"-SecretName","text":"<p>The name to use for the secret in the SecretManagement vault. Defaults to 'DBPool_ApiKey'.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: DBPool_ApiKey\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#-dbpool_apikey","title":"-DBPool_ApiKey","text":"<p>The secure string containing the DBPool API key. This parameter is mandatory. DBPool API key can be retrieved from the web interface at \"$DBPool_Base_URI/web/self\".</p> <pre><code>Type: SecureString\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: True (ByPropertyName, ByValue)\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#-secretstorename","title":"-SecretStoreName","text":"<p>The name of the SecretManagement vault where the secret will be stored. Default value is 'Datto_SecretStore'.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: Datto_SecretStore\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#-force","title":"-Force","text":"<p>If specified, forces the function to overwrite the existing secret if it already exists in the vault.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#-whatif","title":"-WhatIf","text":"<p>Shows what would happen if the cmdlet runs. The cmdlet is not run.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: wi\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#-confirm","title":"-Confirm","text":"<p>Prompts you for confirmation before running the cmdlet.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: cf\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#inputs","title":"INPUTS","text":""},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#securestring-the-secure-string-containing-the-dbpool-api-key","title":"[securestring] - The secure string containing the DBPool API key","text":""},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#outputs","title":"OUTPUTS","text":""},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#na","title":"N/A","text":""},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#notes","title":"NOTES","text":"<p>Ensure that the PowerShell SecretManagement module is installed and configured before using this function.</p>"},{"location":"Internal/apiKey/Set-RefreshDBPoolApiKey/#related-links","title":"RELATED LINKS","text":"<p>https://datto-dbpool-refresh.kentsapp.com/Internal/apiKey/Set-RefreshDBPoolApiKey/</p>"},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/","title":"Update-RefreshDBPoolModule","text":""},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#synopsis","title":"SYNOPSIS","text":"<p>Updates the Datto.DBPool.Refresh module if a newer version is available online.</p>"},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#syntax","title":"SYNTAX","text":"<pre><code>Update-RefreshDBPoolModule [[-ModuleName] &lt;String&gt;] [-AutoUpdate] [-AllowPrerelease] [-WhatIf] [-Confirm]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#description","title":"DESCRIPTION","text":"<p>This function checks for updates to the Datto.DBPool.Refresh module and updates it if a newer version is available online. The auto-update feature can be disabled by setting the AutoUpdate parameter to $false otherwise, it will default to $true.</p>"},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#examples","title":"EXAMPLES","text":""},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#example-1","title":"EXAMPLE 1","text":"<pre><code>Update-RefreshDBPoolModule -ModuleName 'Datto.DBPool.Refresh' -AutoUpdate:$true -AllowPrerelease:$false\n</code></pre> <p>Updates the Datto.DBPool.Refresh module if a newer version is available online.</p>"},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#parameters","title":"PARAMETERS","text":""},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#-modulename","title":"-ModuleName","text":"<p>The name of the module to update. Defaults to 'Datto.DBPool.Refresh'.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 1\nDefault value: Datto.DBPool.Refresh\nAccept pipeline input: True (ByPropertyName, ByValue)\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#-autoupdate","title":"-AutoUpdate","text":"<p>If specified, the module will be updated if a newer version is available online. Defaults to $RefreshDBPool_Enable_AutoUpdate variable.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 2\nDefault value: $RefreshDBPool_Enable_AutoUpdate\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#-allowprerelease","title":"-AllowPrerelease","text":"<p>If specified, the module will be updated to the latest prerelease version if available. Defaults to $false.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 3\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#-whatif","title":"-WhatIf","text":"<p>Shows what would happen if the cmdlet runs. The cmdlet is not run.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: wi\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#-confirm","title":"-Confirm","text":"<p>Prompts you for confirmation before running the cmdlet.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: cf\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#inputs","title":"INPUTS","text":""},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#string-modulename","title":"[string] - ModuleName","text":""},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#outputs","title":"OUTPUTS","text":""},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#na","title":"N/A","text":""},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#notes","title":"NOTES","text":"<p>N/A</p>"},{"location":"Internal/autoUpdate/Update-RefreshDBPoolModule/#related-links","title":"RELATED LINKS","text":"<p>https://datto-dbpool-refresh.kentsapp.com/Internal/autoUpdate/Update-RefreshDBPoolModule/</p>"},{"location":"Internal/logging/Remove-RefreshDBPoolLog/","title":"Remove-RefreshDBPoolLog","text":""},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#synopsis","title":"SYNOPSIS","text":"<p>Remove log files older than a specified number of days.</p>"},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#syntax","title":"SYNTAX","text":"<pre><code>Remove-RefreshDBPoolLog [[-LogPath] &lt;String&gt;] [[-LogFileName] &lt;String&gt;] [[-LogRotationDays] &lt;Int32&gt;] [-Force]\n [-WhatIf] [-Confirm] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#description","title":"DESCRIPTION","text":"<p>The Remove-RefreshDBPoolLog cmdlet removes log files older than a specified number of days.</p> <p>By default, log files are stored in the following location and will be removed:     $env:USERPROFILE\\RefreshDBPool\\Logs</p>"},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#examples","title":"EXAMPLES","text":""},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#example-1","title":"EXAMPLE 1","text":"<pre><code>Remove-RefreshDBPoolLog\nRemove log files older than 90 days.\n</code></pre>"},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#example-2","title":"EXAMPLE 2","text":"<pre><code>Remove-RefreshDBPoolLog -LogPath C:\\RefreshDBPool\\Logs -LogFileName \"RefreshDBPool_*.log\" -LogRotationDays 7 -Force\nRemove log files older than 7 days from the specified location.\n</code></pre>"},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#parameters","title":"PARAMETERS","text":""},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#-logpath","title":"-LogPath","text":"<p>Define the location of the log files.</p> <p>By default, log files are stored in the following location:     $env:USERPROFILE\\RefreshDBPool\\Logs</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 1\nDefault value: $RefreshDBPool_LogPath\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#-logfilename","title":"-LogFileName","text":"<p>Define the name of the log files.</p> <p>By default, log files are named:     RefreshDBPool_*.log</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 2\nDefault value: $RefreshDBPool_LogFileName\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#-logrotationdays","title":"-LogRotationDays","text":"<p>Define the number of days to keep log files. By default, log files older than 90 days will be removed.</p> <pre><code>Type: Int32\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 3\nDefault value: $RefreshDBPool_LogRotationDays\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#-force","title":"-Force","text":"<p>If specified, the function will not prompt for confirmation before removing the log files.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#-whatif","title":"-WhatIf","text":"<p>Shows what would happen if the cmdlet runs. The cmdlet is not run.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: wi\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#-confirm","title":"-Confirm","text":"<p>Prompts you for confirmation before running the cmdlet.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: cf\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#inputs","title":"INPUTS","text":""},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#na","title":"N/A","text":""},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#outputs","title":"OUTPUTS","text":""},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#na_1","title":"N/A","text":""},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#notes","title":"NOTES","text":"<p>N/A</p>"},{"location":"Internal/logging/Remove-RefreshDBPoolLog/#related-links","title":"RELATED LINKS","text":"<p>https://datto-dbpool-refresh.kentsapp.com/Internal/logging/Remove-RefreshDBPoolLog/</p>"},{"location":"Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/","title":"Export-RefreshDBPoolModuleSetting","text":""},{"location":"Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/#synopsis","title":"SYNOPSIS","text":"<p>Exports various module settings to a configuration file.</p>"},{"location":"Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/#syntax","title":"SYNTAX","text":"<pre><code>Export-RefreshDBPoolModuleSetting [-RefreshDBPoolConfPath &lt;String&gt;] [-RefreshDBPoolConfFile &lt;String&gt;]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/#description","title":"DESCRIPTION","text":"<p>The Export-RefreshDBPoolSettings cmdlet exports various module settings to a configuration file which can be used to override default settings.</p>"},{"location":"Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/#examples","title":"EXAMPLES","text":""},{"location":"Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/#example-1","title":"EXAMPLE 1","text":"<pre><code>Export-RefreshDBPoolSettings\n</code></pre> <p>Validates that the BaseURI, and JSON depth are set then exports their values to the current user's DBPool configuration file located at:     $env:USERPROFILE\\RefreshDBPool\\config.psd1</p>"},{"location":"Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/#example-2","title":"EXAMPLE 2","text":"<pre><code>Export-RefreshDBPoolSettings -DBPoolConfPath C:\\RefreshDBPool -DBPoolConfFile MyConfig.psd1\n</code></pre> <p>Validates that the BaseURI, and JSON depth are set then exports their values to the current user's DBPool configuration file located at:     C:\\RefreshDBPool\\MyConfig.psd1</p>"},{"location":"Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/#parameters","title":"PARAMETERS","text":""},{"location":"Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/#-refreshdbpoolconfpath","title":"-RefreshDBPoolConfPath","text":"<p>Define the location to store the Refresh DBPool configuration file.</p> <p>By default the configuration file is stored in the following location:     $env:USERPROFILE\\RefreshDBPool</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: $(Join-Path -Path $home -ChildPath $(if ($IsWindows -or $PSEdition -eq 'Desktop'){\"RefreshDBPool\"}else{\".RefreshDBPool\"}) )\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/#-refreshdbpoolconffile","title":"-RefreshDBPoolConfFile","text":"<p>Define the name of the refresh DBPool configuration file.</p> <p>By default the configuration file is named:     config.psd1</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: Config.psd1\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/#inputs","title":"INPUTS","text":""},{"location":"Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/#na","title":"N/A","text":""},{"location":"Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/#outputs","title":"OUTPUTS","text":""},{"location":"Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/#na_1","title":"N/A","text":""},{"location":"Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/#notes","title":"NOTES","text":"<p>N/A</p>"},{"location":"Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/#related-links","title":"RELATED LINKS","text":"<p>https://datto-dbpool-refresh.kentsapp.com/Internal/moduleSettings/Export-RefreshDBPoolModuleSetting/</p>"},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/","title":"Get-RefreshDBPoolModuleSetting","text":""},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#synopsis","title":"SYNOPSIS","text":"<p>Gets the saved DBPool configuration settings</p>"},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#syntax","title":"SYNTAX","text":""},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#index-default","title":"index (Default)","text":"<pre><code>Get-RefreshDBPoolModuleSetting [-RefreshDBPoolConfPath &lt;String&gt;] [-RefreshDBPoolConfFile &lt;String&gt;]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#show","title":"show","text":"<pre><code>Get-RefreshDBPoolModuleSetting [-openConfFile] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#description","title":"DESCRIPTION","text":"<p>The Get-RefreshDBPoolModuleSetting cmdlet gets the saved DBPool refresh configuration settings from the local system.</p> <p>By default the configuration file is stored in the following location:     $env:USERPROFILE\\RefreshDBPool</p>"},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#examples","title":"EXAMPLES","text":""},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#example-1","title":"EXAMPLE 1","text":"<pre><code>Get-RefreshDBPoolModuleSetting\n</code></pre> <p>Gets the contents of the configuration file that was created with the Export-RefreshDBPoolModuleSettings</p> <p>The default location of the DBPool configuration file is:     $env:USERPROFILE\\RefreshDBPool\\config.psd1</p>"},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#example-2","title":"EXAMPLE 2","text":"<pre><code>Get-RefreshDBPoolModuleSetting -RefreshDBPoolConfig C:\\RefreshDBPool -DBPoolConfFile MyConfig.psd1 -openConfFile\n</code></pre> <p>Opens the configuration file from the defined location in the default editor</p> <p>The location of the DBPool configuration file in this example is:     C:\\RefreshDBPool\\MyConfig.psd1</p>"},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#parameters","title":"PARAMETERS","text":""},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#-refreshdbpoolconfpath","title":"-RefreshDBPoolConfPath","text":"<p>Define the location to store the DBPool configuration file.</p> <p>By default the configuration file is stored in the following location:     $env:USERPROFILE\\RefreshDBPool</p> <pre><code>Type: String\nParameter Sets: index\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: $(Join-Path -Path $home -ChildPath $(if ($IsWindows -or $PSEdition -eq 'Desktop'){\"RefreshDBPool\"}else{\".RefreshDBPool\"}) )\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#-refreshdbpoolconffile","title":"-RefreshDBPoolConfFile","text":"<p>Define the name of the DBPool configuration file.</p> <p>By default the configuration file is named:     config.psd1</p> <pre><code>Type: String\nParameter Sets: index\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: Config.psd1\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#-openconffile","title":"-openConfFile","text":"<p>Opens the DBPool configuration file</p> <pre><code>Type: SwitchParameter\nParameter Sets: show\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#inputs","title":"INPUTS","text":""},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#na","title":"N/A","text":""},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#outputs","title":"OUTPUTS","text":""},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#na_1","title":"N/A","text":""},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#notes","title":"NOTES","text":"<p>N/A</p>"},{"location":"Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/#related-links","title":"RELATED LINKS","text":"<p>https://datto-dbpool-refresh.kentsapp.com/Internal/moduleSettings/Get-RefreshDBPoolModuleSetting/</p>"},{"location":"Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/","title":"Import-RefreshDBPoolModuleSetting","text":""},{"location":"Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/#synopsis","title":"SYNOPSIS","text":"<p>Imports the DBPool BaseURI, API, &amp; JSON configuration information to the current session.</p>"},{"location":"Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/#syntax","title":"SYNTAX","text":"<pre><code>Import-RefreshDBPoolModuleSetting [-RefreshDBPoolConfPath &lt;String&gt;] [-RefreshDBPoolConfFile &lt;String&gt;]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/#description","title":"DESCRIPTION","text":"<p>The Import-RefreshDBPoolModuleSetting cmdlet imports the DBPool BaseURI, API, &amp; JSON configuration information stored in the DBPool refresh configuration file to the users current session.</p> <p>By default the configuration file is stored in the following location:     $env:USERPROFILE\\RefreshDBPool</p>"},{"location":"Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/#examples","title":"EXAMPLES","text":""},{"location":"Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/#example-1","title":"EXAMPLE 1","text":"<pre><code>Import-RefreshDBPoolModuleSetting\n</code></pre> <p>Validates that the configuration file created with the Export-RefreshDBPoolModuleSettings cmdlet exists then imports the stored data into the current users session.</p> <p>The default location of the DBPool configuration file is:     $env:USERPROFILE\\RefreshDBPool\\config.psd1</p>"},{"location":"Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/#example-2","title":"EXAMPLE 2","text":"<pre><code>Import-RefreshDBPoolModuleSetting -RefreshDBPoolConfPath C:\\RefreshDBPool -RefreshDBPoolConfFile MyConfig.psd1\n</code></pre> <p>Validates that the configuration file created with the Export-RefreshDBPoolModuleSettings cmdlet exists then imports the stored data into the current users session.</p> <p>The location of the DBPool configuration file in this example is:     C:\\RefreshDBPool\\MyConfig.psd1</p>"},{"location":"Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/#parameters","title":"PARAMETERS","text":""},{"location":"Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/#-refreshdbpoolconfpath","title":"-RefreshDBPoolConfPath","text":"<p>Define the location to store the DBPool configuration file.</p> <p>By default the configuration file is stored in the following location:     $env:USERPROFILE\\RefreshDBPool</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: $(Join-Path -Path $home -ChildPath $(if ($IsWindows -or $PSEdition -eq 'Desktop'){\"RefreshDBPool\"}else{\".RefreshDBPool\"}) )\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/#-refreshdbpoolconffile","title":"-RefreshDBPoolConfFile","text":"<p>Define the name of the DBPool configuration file.</p> <p>By default the configuration file is named:     config.psd1</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: Config.psd1\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/#inputs","title":"INPUTS","text":""},{"location":"Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/#na","title":"N/A","text":""},{"location":"Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/#outputs","title":"OUTPUTS","text":""},{"location":"Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/#na_1","title":"N/A","text":""},{"location":"Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/#notes","title":"NOTES","text":"<p>N/A</p>"},{"location":"Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/#related-links","title":"RELATED LINKS","text":"<p>https://datto-dbpool-refresh.kentsapp.com/Internal/moduleSettings/Import-RefreshDBPoolModuleSetting/</p>"},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/","title":"Remove-RefreshDBPoolModuleSetting","text":""},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#synopsis","title":"SYNOPSIS","text":"<p>Removes the stored Refresh DBPool configuration folder.</p>"},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#syntax","title":"SYNTAX","text":"<pre><code>Remove-RefreshDBPoolModuleSetting [-RefreshDBPoolConfPath &lt;String&gt;] [-andVariables] [-WhatIf] [-Confirm]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#description","title":"DESCRIPTION","text":"<p>The Remove-RefreshDBPoolModuleSetting cmdlet removes the Refresh DBPool folder and its files. This cmdlet also has the option to remove sensitive Refresh DBPool variables as well.</p> <p>By default configuration files are stored in the following location and will be removed:     $env:USERPROFILE\\RefreshDBPool</p>"},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#examples","title":"EXAMPLES","text":""},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#example-1","title":"EXAMPLE 1","text":"<pre><code>Remove-RefreshDBPoolModuleSetting\n</code></pre> <p>Checks to see if the default configuration folder exists and removes it if it does.</p> <p>The default location of the Refresh DBPool configuration folder is:     $env:USERPROFILE\\RefreshDBPool</p>"},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#example-2","title":"EXAMPLE 2","text":"<pre><code>Remove-RefreshDBPoolModuleSetting -RefreshDBPoolConfPath C:\\RefreshDBPool -andVariables\n</code></pre> <p>Checks to see if the defined configuration folder exists and removes it if it does. If sensitive Refresh DBPool variables exist then they are removed as well.</p> <p>The location of the Refresh DBPool configuration folder in this example is:     C:\\RefreshDBPool</p>"},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#parameters","title":"PARAMETERS","text":""},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#-refreshdbpoolconfpath","title":"-RefreshDBPoolConfPath","text":"<p>Define the location of the Refresh DBPool configuration folder.</p> <p>By default the configuration folder is located at:     $env:USERPROFILE\\RefreshDBPool</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: $(Join-Path -Path $home -ChildPath $(if ($IsWindows -or $PSEdition -eq 'Desktop'){\"RefreshDBPool\"}else{\".RefreshDBPool\"}) )\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#-andvariables","title":"-andVariables","text":"<p>Define if sensitive Refresh DBPool variables should be removed as well.</p> <p>By default the variables are not removed.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#-whatif","title":"-WhatIf","text":"<p>Shows what would happen if the cmdlet runs. The cmdlet is not run.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: wi\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#-confirm","title":"-Confirm","text":"<p>Prompts you for confirmation before running the cmdlet.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: cf\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#inputs","title":"INPUTS","text":""},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#na","title":"N/A","text":""},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#outputs","title":"OUTPUTS","text":""},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#na_1","title":"N/A","text":""},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#notes","title":"NOTES","text":"<p>N/A</p>"},{"location":"Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/#related-links","title":"RELATED LINKS","text":"<p>https://datto-dbpool-refresh.kentsapp.com/Internal/moduleSettings/Remove-RefreshDBPoolModuleSetting/</p>"},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/","title":"Register-RefreshDBPoolTask","text":""},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/#synopsis","title":"SYNOPSIS","text":"<p>Creates a scheduled task to automate the refresh of Datto DBPool containers.</p>"},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/#syntax","title":"SYNTAX","text":"<pre><code>Register-RefreshDBPoolTask [-TriggerTime] &lt;DateTime&gt; [[-ExcludeDaysOfWeek] &lt;DayOfWeek[]&gt;] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/#description","title":"DESCRIPTION","text":"<p>This function sets up a scheduled task that runs a PowerShell script to refresh Datto DBPool containers. The task can be configured to run on specific days of the week and at a specified time.</p>"},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/#examples","title":"EXAMPLES","text":""},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/#example-1","title":"EXAMPLE 1","text":"<pre><code>Register-RefreshDBPoolTask -TriggerTime \"7AM\"\n</code></pre> <p>This example creates a scheduled task that runs every day at 7:00 AM, except on Sundays and Saturdays.</p>"},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/#example-2","title":"EXAMPLE 2","text":"<pre><code>Register-RefreshDBPoolTask -TriggerTime \"15:00\"\n</code></pre> <p>This example creates a scheduled task that runs every day at 3:00 PM, except on Sundays and Saturdays.</p>"},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/#example-3","title":"EXAMPLE 3","text":"<pre><code>Register-RefreshDBPoolTask -ExcludeDaysOfWeek 'Sunday','Monday' -TriggerTime \"4:30PM\"\n</code></pre> <p>This example creates a scheduled task that runs every day at 4:30 PM, except on Sunday and Monday.</p>"},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/#parameters","title":"PARAMETERS","text":""},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/#-triggertime","title":"-TriggerTime","text":"<p>Specifies the time of day at which the scheduled task should run. This should be set to roughly ~1 hour before shift start, so that all containers are refreshed and ready for use.</p> <pre><code>Type: DateTime\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/#-excludedaysofweek","title":"-ExcludeDaysOfWeek","text":"<p>Specifies the days of the week on which the scheduled task should NOT be run. This will generally be days off work, by default the task will not run on Sundays and Saturdays.</p> <pre><code>Type: DayOfWeek[]\nParameter Sets: (All)\nAliases:\nAccepted values: Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday\n\nRequired: False\nPosition: 2\nDefault value: @('Sunday','Saturday')\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/#inputs","title":"INPUTS","text":""},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/#na","title":"N/A","text":""},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/#outputs","title":"OUTPUTS","text":""},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/#na_1","title":"N/A","text":""},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/#notes","title":"NOTES","text":"<p>This function is currently designed to work only on Windows systems. It uses the Task Scheduler to create and manage the scheduled task. Will look to add support for Linux/MacOS using cron jobs or similar such as anacron in the future.</p>"},{"location":"Internal/scheduledTask/Register-RefreshDBPoolTask/#related-links","title":"RELATED LINKS","text":"<p>https://datto-dbpool-refresh.kentsapp.com/Internal/scheduledTask/Register-RefreshDBPoolTask/</p> <p>https://docs.microsoft.com/en-us/powershell/module/scheduledtasks/new-scheduledtask</p>"},{"location":"Internal/scheduledTask/Update-RefreshDBPoolTask/","title":"Update-RefreshDBPoolTask","text":""},{"location":"Internal/scheduledTask/Update-RefreshDBPoolTask/#synopsis","title":"SYNOPSIS","text":"<p>Updates the refresh DBPool scheduled task.</p>"},{"location":"Internal/scheduledTask/Update-RefreshDBPoolTask/#syntax","title":"SYNTAX","text":"<pre><code>Update-RefreshDBPoolTask [-Force] [-WhatIf] [-Confirm] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Internal/scheduledTask/Update-RefreshDBPoolTask/#description","title":"DESCRIPTION","text":"<p>This function updates the scheduled task that runs the refresh DBPool script by updating path and arguments.</p>"},{"location":"Internal/scheduledTask/Update-RefreshDBPoolTask/#examples","title":"EXAMPLES","text":""},{"location":"Internal/scheduledTask/Update-RefreshDBPoolTask/#example-1","title":"EXAMPLE 1","text":"<pre><code>Update-RefreshDBPoolTask\n</code></pre> <p>This example updates the scheduled task that runs the refresh DBPool script.</p>"},{"location":"Internal/scheduledTask/Update-RefreshDBPoolTask/#parameters","title":"PARAMETERS","text":""},{"location":"Internal/scheduledTask/Update-RefreshDBPoolTask/#-force","title":"-Force","text":"<p>Forces the update of the scheduled task.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/scheduledTask/Update-RefreshDBPoolTask/#-whatif","title":"-WhatIf","text":"<p>Shows what would happen if the cmdlet runs. The cmdlet is not run.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: wi\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/scheduledTask/Update-RefreshDBPoolTask/#-confirm","title":"-Confirm","text":"<p>Prompts you for confirmation before running the cmdlet.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: cf\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Internal/scheduledTask/Update-RefreshDBPoolTask/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"Internal/scheduledTask/Update-RefreshDBPoolTask/#inputs","title":"INPUTS","text":""},{"location":"Internal/scheduledTask/Update-RefreshDBPoolTask/#na","title":"N/A","text":""},{"location":"Internal/scheduledTask/Update-RefreshDBPoolTask/#outputs","title":"OUTPUTS","text":""},{"location":"Internal/scheduledTask/Update-RefreshDBPoolTask/#na_1","title":"N/A","text":""},{"location":"Internal/scheduledTask/Update-RefreshDBPoolTask/#notes","title":"NOTES","text":"<p>This function is currently only supported on Windows systems.</p>"},{"location":"Internal/scheduledTask/Update-RefreshDBPoolTask/#related-links","title":"RELATED LINKS","text":"<p>https://datto-dbpool-refresh.kentsapp.com/Internal/scheduledTask/Update-RefreshDBPoolTask/</p>"}]}